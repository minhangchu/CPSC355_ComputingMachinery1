Script started on 2019-05-31 15:05:11-06:00
No such schema “org.gnome.gedit.preferences.editor”
]0;minhhang.chu@csa1:~/Desktop/CPSC355/ASN/ASN3minhhang.chu@csa1:~/Desktop/CPSC355/ASN/ASN3$ ./assign3 gcc assign3.s -g -o assign3[1Pm4 assign3.asm > assign3.s
]0;minhhang.chu@csa1:~/Desktop/CPSC355/ASN/ASN3minhhang.chu@csa1:~/Desktop/CPSC355/ASN/ASN3$ m4 assign3.asm > assign3.s[16P./assign3 gcc assign3.s -g -o assign3
]0;minhhang.chu@csa1:~/Desktop/CPSC355/ASN/ASN3minhhang.chu@csa1:~/Desktop/CPSC355/ASN/ASN3$ gcc assign3.s -g -o assign3[1Pm4 assign3.asm > assign3.s[16P./assign3 gcc assign3.s -g -o assign3[1Pm4 assign3.asm > assign3.sgcc assign3.s -g -o assign3[1Pm4 assign3.asm > assign3.sgcc assign3.s -g -o assign3[1Pm4 assign3.asm > assign3.sgcc assign3.s -g -o assign3[1Pm4 assign3.asm > assign3.sgcc assign3.s -g -o assign3[1Pm4 assign3.asm > assign3.sgcc assign3.s -g -o assign3[17P./assign3 m4 assign3.asm > assign3.sgcc assign3.s -g -o assign3[Kgcc assign3.s -g -o assign3[1Pm4 assign3.asm > assign3.s[16P./assign3 [K[K[K[K[K[K[K[K[K[Kgdb assign3
GNU gdb (GDB) Fedora 8.1.1-4.fc28
Copyright (C) 2018 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.  Type "show copying"
and "show warranty" for details.
This GDB was configured as "aarch64-redhat-linux-gnu".
Type "show configuration" for configuration details.
For bug reporting instructions, please see:
<http://www.gnu.org/software/gdb/bugs/>.
Find the GDB manual and other documentation resources online at:
<http://www.gnu.org/software/gdb/documentation/>.
For help, type "help".
Type "apropos word" to search for commands related to "word"...
Reading symbols from assign3...done.
(gdb) b loop [K1
Breakpoint 1 at 0x4006ac: file assign3.s, line 54.
(gdb) display /i $pc
1: x/i $pc
<error: No registers.>
(gdb) r
Starting program: /home/uga/minhhang.chu/Desktop/CPSC355/ASN/ASN3/assign3 
warning: the debug information found in "/usr/lib/debug//usr/lib64/ld-2.27.so.debug" does not match "/lib/ld-linux-aarch64.so.1" (CRC mismatch).

Missing separate debuginfos, use: dnf debuginfo-install glibc-2.27-38.fc28.aarch64
warning: the debug information found in "/usr/lib/debug//lib64/libc-2.27.so.debug" does not match "/lib64/libc.so.6" (CRC mismatch).

warning: the debug information found in "/usr/lib/debug//usr/lib64/libc-2.27.so.debug" does not match "/lib64/libc.so.6" (CRC mismatch).


Breakpoint 1, loop1 () at assign3.s:54
54		bl      rand				// call random function to get new number
1: x/i $pc
=> 0x4006ac <loop1>:	bl	0x400510 <rand@plt>
(gdb) n
55		and     x2,     x0,     0xFF		// x2 = x0 % 30
1: x/i $pc
=> 0x4006b0 <loop1+4>:	and	x2, x0, #0xff
(gdb) n
56		strb    w2 ,    [arrayBA,i]		// initialize the current element
1: x/i $pc
=> 0x4006b4 <loop1+8>:	strb	w2, [x20, x19]
(gdb) 
58		ldr     x0,     =data1			// print the current array element
1: x/i $pc
=> 0x4006b8 <loop1+12>:	ldr	x0, 0x400750 <printloop+44>
(gdb) 
59		mov     x1,     i			// index
1: x/i $pc
=> 0x4006bc <loop1+16>:	mov	x1, x19
(gdb) 
60		bl      printf
1: x/i $pc
=> 0x4006c0 <loop1+20>:	bl	0x400550 <printf@plt>
(gdb) 
v[0]: 23
62		add	i,	i,	1		// increase index by 1 after each loop
1: x/i $pc
=> 0x4006c4 <loop1+24>:	add	x19, x19, #0x1
(gdb) 
63		cmp	i,	49			// compare index with 49, if less or equal, start the loop again
1: x/i $pc
=> 0x4006c8 <loop1+28>:	cmp	x19, #0x31
(gdb) 
64		b.le	loop1
1: x/i $pc
=> 0x4006cc <loop1+32>:	b.le	0x4006ac <loop1>
(gdb) 

Breakpoint 1, loop1 () at assign3.s:54
54		bl      rand				// call random function to get new number
1: x/i $pc
=> 0x4006ac <loop1>:	bl	0x400510 <rand@plt>
(gdb) 
55		and     x2,     x0,     0xFF		// x2 = x0 % 30
1: x/i $pc
=> 0x4006b0 <loop1+4>:	and	x2, x0, #0xff
(gdb) 
56		strb    w2 ,    [arrayBA,i]		// initialize the current element
1: x/i $pc
=> 0x4006b4 <loop1+8>:	strb	w2, [x20, x19]
(gdb) 
58		ldr     x0,     =data1			// print the current array element
1: x/i $pc
=> 0x4006b8 <loop1+12>:	ldr	x0, 0x400750 <printloop+44>
(gdb) 
59		mov     x1,     i			// index
1: x/i $pc
=> 0x4006bc <loop1+16>:	mov	x1, x19
(gdb) 
60		bl      printf
1: x/i $pc
=> 0x4006c0 <loop1+20>:	bl	0x400550 <printf@plt>
(gdb) 
v[1]: 69
62		add	i,	i,	1		// increase index by 1 after each loop
1: x/i $pc
=> 0x4006c4 <loop1+24>:	add	x19, x19, #0x1
(gdb) 
63		cmp	i,	49			// compare index with 49, if less or equal, start the loop again
1: x/i $pc
=> 0x4006c8 <loop1+28>:	cmp	x19, #0x31
(gdb) 
64		b.le	loop1
1: x/i $pc
=> 0x4006cc <loop1+32>:	b.le	0x4006ac <loop1>
(gdb) 

Breakpoint 1, loop1 () at assign3.s:54
54		bl      rand				// call random function to get new number
1: x/i $pc
=> 0x4006ac <loop1>:	bl	0x400510 <rand@plt>
(gdb) 
55		and     x2,     x0,     0xFF		// x2 = x0 % 30
1: x/i $pc
=> 0x4006b0 <loop1+4>:	and	x2, x0, #0xff
(gdb) 
56		strb    w2 ,    [arrayBA,i]		// initialize the current element
1: x/i $pc
=> 0x4006b4 <loop1+8>:	strb	w2, [x20, x19]
(gdb) 
58		ldr     x0,     =data1			// print the current array element
1: x/i $pc
=> 0x4006b8 <loop1+12>:	ldr	x0, 0x400750 <printloop+44>
(gdb) 
59		mov     x1,     i			// index
1: x/i $pc
=> 0x4006bc <loop1+16>:	mov	x1, x19
(gdb) 
60		bl      printf
1: x/i $pc
=> 0x4006c0 <loop1+20>:	bl	0x400550 <printf@plt>
(gdb) 
v[2]: 56
62		add	i,	i,	1		// increase index by 1 after each loop
1: x/i $pc
=> 0x4006c4 <loop1+24>:	add	x19, x19, #0x1
(gdb) 
63		cmp	i,	49			// compare index with 49, if less or equal, start the loop again
1: x/i $pc
=> 0x4006c8 <loop1+28>:	cmp	x19, #0x31
(gdb) 
64		b.le	loop1
1: x/i $pc
=> 0x4006cc <loop1+32>:	b.le	0x4006ac <loop1>
(gdb) 

Breakpoint 1, loop1 () at assign3.s:54
54		bl      rand				// call random function to get new number
1: x/i $pc
=> 0x4006ac <loop1>:	bl	0x400510 <rand@plt>
(gdb) x
0x4006b0 <loop1+4>:	0x92401c02
(gdb) x
0x4006b4 <loop1+8>:	0x38336a82
(gdb) x
0x4006b8 <loop1+12>:	0x580004c0
(gdb) x
0x4006bc <loop1+16>:	0xaa1303e1
(gdb) x
0x4006c0 <loop1+20>:	0x97ffffa4
(gdb) x
0x4006c4 <loop1+24>:	0x91000673
(gdb) x
0x4006c8 <loop1+28>:	0xf100c67f
(gdb) x
0x4006cc <loop1+32>:	0x54ffff0d
(gdb) x
0x4006d0 <loop1+36>:	0xd2800033
(gdb) x
0x4006d4 <loop2a>:	0x38736a96
(gdb) q
A debugging session is active.

	Inferior 1 [process 22472] will be killed.

Quit anyway? (y or n) y
]0;minhhang.chu@csa1:~/Desktop/CPSC355/ASN/ASN3minhhang.chu@csa1:~/Desktop/CPSC355/ASN/ASN3$ gdb assign3[16@cc assign3.s -g -o[C[C[C[C[C[C[C[C[16Pdb[C[C[C[C[C[C[C[C
GNU gdb (GDB) Fedora 8.1.1-4.fc28
Copyright (C) 2018 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.  Type "show copying"
and "show warranty" for details.
This GDB was configured as "aarch64-redhat-linux-gnu".
Type "show configuration" for configuration details.
For bug reporting instructions, please see:
<http://www.gnu.org/software/gdb/bugs/>.
Find the GDB manual and other documentation resources online at:
<http://www.gnu.org/software/gdb/documentation/>.
For help, type "help".
Type "apropos word" to search for commands related to "word"...
Reading symbols from assign3...done.
(gdb) b loop [K2a
Breakpoint 1 at 0x4006d4: file assign3.s, line 69.
(gdb) b loop2a[K[K[K[K[K[K[K[Kdisplay /i $pc 
1: x/i $pc
<error: No registers.>
(gdb) r
Starting program: /home/uga/minhhang.chu/Desktop/CPSC355/ASN/ASN3/assign3 
warning: the debug information found in "/usr/lib/debug//usr/lib64/ld-2.27.so.debug" does not match "/lib/ld-linux-aarch64.so.1" (CRC mismatch).

Missing separate debuginfos, use: dnf debuginfo-install glibc-2.27-38.fc28.aarch64
warning: the debug information found in "/usr/lib/debug//lib64/libc-2.27.so.debug" does not match "/lib64/libc.so.6" (CRC mismatch).

warning: the debug information found in "/usr/lib/debug//usr/lib64/libc-2.27.so.debug" does not match "/lib64/libc.so.6" (CRC mismatch).

v[0]: 183
v[1]: 228
v[2]: 228
v[3]: 107
v[4]: 93
v[5]: 81
v[6]: 231
v[7]: 185
v[8]: 122
v[9]: 214
v[10]: 19
v[11]: 107
v[12]: 227
v[13]: 62
v[14]: 159
v[15]: 12
v[16]: 91
v[17]: 151
v[18]: 224
v[19]: 161
v[20]: 249
v[21]: 51
v[22]: 56
v[23]: 191
v[24]: 171
v[25]: 203
v[26]: 52
v[27]: 109
v[28]: 121
v[29]: 75
v[30]: 6
v[31]: 49
v[32]: 47
v[33]: 234
v[34]: 156
v[35]: 140
v[36]: 60
v[37]: 131
v[38]: 70
v[39]: 182
v[40]: 89
v[41]: 89
v[42]: 34
v[43]: 60
v[44]: 151
v[45]: 193
v[46]: 72
v[47]: 242
v[48]: 89
v[49]: 40

Breakpoint 1, loop2a () at assign3.s:69
69		ldrb	temp,	[arrayBA,i]		// Load value of v[i] to temp
1: x/i $pc
=> 0x4006d4 <loop2a>:	ldrb	w22, [x20, x19]
(gdb) n
70		mov	j,	i			// Initialize j = i
1: x/i $pc
=> 0x4006d8 <loop2a+4>:	mov	x21, x19
(gdb) n
71		sub	prej,	j,	1		// Set prej = j-1
1: x/i $pc
=> 0x4006dc <loop2a+8>:	sub	x24, x21, #0x1
(gdb) n
72		ldrb	preVal,	[arrayBA,prej]		// Load preVal is v[j-1]
1: x/i $pc
=> 0x4006e0 <loop2a+12>:	ldrb	w23, [x20, x24]
(gdb) n
loop2b () at assign3.s:75
75		cmp	j,	0			// Compare j with 0
1: x/i $pc
=> 0x4006e4 <loop2b>:	cmp	x21, #0x0
(gdb) n
76		b.le	end1				// If j is less or equal to 0, loop ends, goes to end1
1: x/i $pc
=> 0x4006e8 <loop2b+4>:	b.le	0x400708 <end1>
(gdb) n
77		cmp	temp,	preVal			// Compare temp with preVal
1: x/i $pc
=> 0x4006ec <loop2b+8>:	cmp	w22, w23
(gdb) n
78		b.ge	end1				// If greater or equal, loop ends, goes to end1
1: x/i $pc
=> 0x4006f0 <loop2b+12>:	b.ge	0x400708 <end1>  // b.tcont
(gdb) n
end1 () at assign3.s:87
87		strb	temp,	[arrayBA,j]		// Store temp value intp v[i]
1: x/i $pc
=> 0x400708 <end1>:	strb	w22, [x20, x21]
(gdb) n
88		add	i,	i,	1		// Increase i by 1
1: x/i $pc
=> 0x40070c <end1+4>:	add	x19, x19, #0x1
(gdb) n
looptest () at assign3.s:92
92		cmp	i,	50			// Compare i and 50
1: x/i $pc
=> 0x400710 <looptest>:	cmp	x19, #0x32
(gdb) n
93		b.lt	loop2a				// If less or equal, branch to loop2a
1: x/i $pc
=> 0x400714 <looptest+4>:	b.lt	0x4006d4 <loop2a>  // b.tstop
(gdb) n

Breakpoint 1, loop2a () at assign3.s:69
69		ldrb	temp,	[arrayBA,i]		// Load value of v[i] to temp
1: x/i $pc
=> 0x4006d4 <loop2a>:	ldrb	w22, [x20, x19]
(gdb) n
70		mov	j,	i			// Initialize j = i
1: x/i $pc
=> 0x4006d8 <loop2a+4>:	mov	x21, x19
(gdb) n
71		sub	prej,	j,	1		// Set prej = j-1
1: x/i $pc
=> 0x4006dc <loop2a+8>:	sub	x24, x21, #0x1
(gdb) n
72		ldrb	preVal,	[arrayBA,prej]		// Load preVal is v[j-1]
1: x/i $pc
=> 0x4006e0 <loop2a+12>:	ldrb	w23, [x20, x24]
(gdb) n
loop2b () at assign3.s:75
75		cmp	j,	0			// Compare j with 0
1: x/i $pc
=> 0x4006e4 <loop2b>:	cmp	x21, #0x0
(gdb) n
76		b.le	end1				// If j is less or equal to 0, loop ends, goes to end1
1: x/i $pc
=> 0x4006e8 <loop2b+4>:	b.le	0x400708 <end1>
(gdb) n
77		cmp	temp,	preVal			// Compare temp with preVal
1: x/i $pc
=> 0x4006ec <loop2b+8>:	cmp	w22, w23
(gdb) n
78		b.ge	end1				// If greater or equal, loop ends, goes to end1
1: x/i $pc
=> 0x4006f0 <loop2b+12>:	b.ge	0x400708 <end1>  // b.tcont
(gdb) 
end1 () at assign3.s:87
87		strb	temp,	[arrayBA,j]		// Store temp value intp v[i]
1: x/i $pc
=> 0x400708 <end1>:	strb	w22, [x20, x21]
(gdb) 
88		add	i,	i,	1		// Increase i by 1
1: x/i $pc
=> 0x40070c <end1+4>:	add	x19, x19, #0x1
(gdb) 
looptest () at assign3.s:92
92		cmp	i,	50			// Compare i and 50
1: x/i $pc
=> 0x400710 <looptest>:	cmp	x19, #0x32
(gdb) 
93		b.lt	loop2a				// If less or equal, branch to loop2a
1: x/i $pc
=> 0x400714 <looptest+4>:	b.lt	0x4006d4 <loop2a>  // b.tstop
(gdb) 

Breakpoint 1, loop2a () at assign3.s:69
69		ldrb	temp,	[arrayBA,i]		// Load value of v[i] to temp
1: x/i $pc
=> 0x4006d4 <loop2a>:	ldrb	w22, [x20, x19]
(gdb) 
70		mov	j,	i			// Initialize j = i
1: x/i $pc
=> 0x4006d8 <loop2a+4>:	mov	x21, x19
(gdb) 
71		sub	prej,	j,	1		// Set prej = j-1
1: x/i $pc
=> 0x4006dc <loop2a+8>:	sub	x24, x21, #0x1
(gdb) 
72		ldrb	preVal,	[arrayBA,prej]		// Load preVal is v[j-1]
1: x/i $pc
=> 0x4006e0 <loop2a+12>:	ldrb	w23, [x20, x24]
(gdb) 
loop2b () at assign3.s:75
75		cmp	j,	0			// Compare j with 0
1: x/i $pc
=> 0x4006e4 <loop2b>:	cmp	x21, #0x0
(gdb) 
76		b.le	end1				// If j is less or equal to 0, loop ends, goes to end1
1: x/i $pc
=> 0x4006e8 <loop2b+4>:	b.le	0x400708 <end1>
(gdb) 
77		cmp	temp,	preVal			// Compare temp with preVal
1: x/i $pc
=> 0x4006ec <loop2b+8>:	cmp	w22, w23
(gdb) 
78		b.ge	end1				// If greater or equal, loop ends, goes to end1
1: x/i $pc
=> 0x4006f0 <loop2b+12>:	b.ge	0x400708 <end1>  // b.tcont
(gdb) 
80		strb	w23,	[arrayBA,j]		// Store value of v[j] into v[j-1]
1: x/i $pc
=> 0x4006f4 <loop2b+16>:	strb	w23, [x20, x21]
(gdb) 
81		sub	j,	j,	1		// Decrease j by 1	
1: x/i $pc
=> 0x4006f8 <loop2b+20>:	sub	x21, x21, #0x1
(gdb) 
82		sub	prej,	j,	1		// Set prej = j-1 again
1: x/i $pc
=> 0x4006fc <loop2b+24>:	sub	x24, x21, #0x1
(gdb) 
83		ldrb	w23,	[arrayBA,prej]		// Load value of v[j-1] into w23
1: x/i $pc
=> 0x400700 <loop2b+28>:	ldrb	w23, [x20, x24]
(gdb) 
84		b	loop2b				// Branch to loop2b
1: x/i $pc
=> 0x400704 <loop2b+32>:	b	0x4006e4 <loop2b>
(gdb) 
75		cmp	j,	0			// Compare j with 0
1: x/i $pc
=> 0x4006e4 <loop2b>:	cmp	x21, #0x0
(gdb) 
76		b.le	end1				// If j is less or equal to 0, loop ends, goes to end1
1: x/i $pc
=> 0x4006e8 <loop2b+4>:	b.le	0x400708 <end1>
(gdb) x
0x4006ec <loop2b+8>:	0x6b1702df
(gdb) x
0x4006f0 <loop2b+12>:	0x540000ca
(gdb) x
0x4006f4 <loop2b+16>:	0x38356a97
(gdb) x
0x4006f8 <loop2b+20>:	0xd10006b5
(gdb) x
0x4006fc <loop2b+24>:	0xd10006b8
(gdb) x
0x400700 <loop2b+28>:	0x38786a97
(gdb) x
0x400704 <loop2b+32>:	0x17fffff8
(gdb) x
0x400708 <end1>:	0x38356a96
(gdb) q[Kq
A debugging session is active.

	Inferior 1 [process 22491] will be killed.

Quit anyway? (y or n) y
]0;minhhang.chu@csa1:~/Desktop/CPSC355/ASN/ASN3minhhang.chu@csa1:~/Desktop/CPSC355/ASN/ASN3$ gdb assign3[16@cc assign3.s -g -o[C[C[C[C[C[C[C[C[16Pdb[C[C[C[C[C[C[C[C
GNU gdb (GDB) Fedora 8.1.1-4.fc28
Copyright (C) 2018 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.  Type "show copying"
and "show warranty" for details.
This GDB was configured as "aarch64-redhat-linux-gnu".
Type "show configuration" for configuration details.
For bug reporting instructions, please see:
<http://www.gnu.org/software/gdb/bugs/>.
Find the GDB manual and other documentation resources online at:
<http://www.gnu.org/software/gdb/documentation/>.
For help, type "help".
Type "apropos word" to search for commands related to "word"...
Reading symbols from assign3...done.
(gdb) r
Starting program: /home/uga/minhhang.chu/Desktop/CPSC355/ASN/ASN3/assign3 
warning: the debug information found in "/usr/lib/debug//usr/lib64/ld-2.27.so.debug" does not match "/lib/ld-linux-aarch64.so.1" (CRC mismatch).

Missing separate debuginfos, use: dnf debuginfo-install glibc-2.27-38.fc28.aarch64
warning: the debug information found in "/usr/lib/debug//lib64/libc-2.27.so.debug" does not match "/lib64/libc.so.6" (CRC mismatch).

warning: the debug information found in "/usr/lib/debug//usr/lib64/libc-2.27.so.debug" does not match "/lib64/libc.so.6" (CRC mismatch).

v[0]: 182
v[1]: 215
v[2]: 181
v[3]: 84
v[4]: 199
v[5]: 158
v[6]: 131
v[7]: 202
v[8]: 32
v[9]: 247
v[10]: 122
v[11]: 23
v[12]: 18
v[13]: 5
v[14]: 136
v[15]: 110
v[16]: 243
v[17]: 27
v[18]: 4
v[19]: 129
v[20]: 26
v[21]: 2
v[22]: 69
v[23]: 3
v[24]: 231
v[25]: 87
v[26]: 35
v[27]: 121
v[28]: 246
v[29]: 209
v[30]: 88
v[31]: 172
v[32]: 169
v[33]: 13
v[34]: 0
v[35]: 112
v[36]: 172
v[37]: 131
v[38]: 58
v[39]: 204
v[40]: 122
v[41]: 180
v[42]: 228
v[43]: 140
v[44]: 186
v[45]: 108
v[46]: 250
v[47]: 173
v[48]: 136
v[49]: 254

Sorted array:
v[0]: 0
v[1]: 2
v[2]: 3
v[3]: 4
v[4]: 5
v[5]: 13
v[6]: 18
v[7]: 23
v[8]: 26
v[9]: 27
v[10]: 32
v[11]: 35
v[12]: 58
v[13]: 69
v[14]: 84
v[15]: 87
v[16]: 88
v[17]: 108
v[18]: 110
v[19]: 112
v[20]: 121
v[21]: 122
v[22]: 122
v[23]: 129
v[24]: 131
v[25]: 131
v[26]: 136
v[27]: 136
v[28]: 140
v[29]: 158
v[30]: 169
v[31]: 172
v[32]: 172
v[33]: 173
v[34]: 180
v[35]: 181
v[36]: 182
v[37]: 186
v[38]: 199
v[39]: 202
v[40]: 204
v[41]: 209
v[42]: 215
v[43]: 228
v[44]: 231
v[45]: 243
v[46]: 246
v[47]: 247
v[48]: 250
v[49]: 254
[Inferior 1 (process 22506) exited with code 013]
(gdb) q
]0;minhhang.chu@csa1:~/Desktop/CPSC355/ASN/ASN3minhhang.chu@csa1:~/Desktop/CPSC355/ASN/ASN3$ exit
exit

Script done on 2019-05-31 15:07:46-06:00
